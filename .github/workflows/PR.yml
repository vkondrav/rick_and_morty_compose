name: PR

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'docs/**'
      - '*.md'
      - '*.yml'
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build
        run: ./gradlew buildDebug

  detekt:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Run Detekt
        run: ./gradlew detektFormat

  test:
    needs: [ detekt ]
    strategy:
      matrix:
        module: [ room, apollo, graphql, data-store, domain, app ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Run Tests
        run: ./gradlew :${{ matrix.module }}:koverXmlReport --stacktrace

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.module }}-tests-coverage
          path: ${{ matrix.module }}/build/reports/kover/project-xml/**/*.xml
          retention-days: 1

#      - name: Upload Unit Test Results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ matrix.module }}-tests-results
#          path: ${{ matrix.module }}/build/test-results/testDebugUnitTest/**/*.xml
#          retention-days: 1

  publish-test-results:
    needs: [ test ]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R

#      - name: Publish Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: "artifacts/**/*.xml"

      - name: Upload report to CodeCov
        uses: codecov/codecov-action@v3
        with:
          files: "artifacts/**/*.xml"

  success:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - run: echo Success!
