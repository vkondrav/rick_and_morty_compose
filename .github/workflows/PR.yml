name: PR

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build
        run: ./gradlew buildDebug

  detekt:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Run Detekt
        run: ./gradlew detektFormat

  test:
    needs: [ detekt ]
    strategy:
      matrix:
        module: [ room,
                  apollo,
                  graphql,
                  data-store,
                  domain,
                  navigation,
                  collapsable-drawer,
                  snackbar,
                  character-all,
                  episode-all,
                  app ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Run Tests and Generate XML Report
        id: tests
        run: | 
          ./gradlew :${{ matrix.module }}:koverXmlReport -x testReleaseUnitTest --stacktrace

      - name: Store Test Results as Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.module }}-tests-results
          path: ${{ matrix.module }}/build/test-results/testDebugUnitTest/**/*.xml
          retention-days: 1

      - name: Upload Coverage Report to CodeCov
        if: ${{ steps.tests.conclusion == 'success' }}
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          files: ${{ matrix.module }}/build/reports/kover/project-xml/report.xml

      - name: Verify Coverage
        if: ${{ steps.tests.conclusion == 'success' }}
        run: |
          ./gradlew :${{ matrix.module }}:koverVerify -x testReleaseUnitTest --stacktrace

  publish-test-results:
    name: "Publish Test Results"
    needs: [ test ]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: "artifacts/**/*.xml"

  success:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - run: echo Success!
